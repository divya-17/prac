<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.prac</groupId>	
	<artifactId>ds</artifactId>
	<version>1.0.0-SNAPSHOT</version>
    <packaging>war</packaging>
<!--	<packaging>jar</packaging>-->

	<properties>
	    <maven.compiler.source>1.7</maven.compiler.source>
    	<maven.compiler.target>1.7</maven.compiler.target>
    	<encoding>UTF-8</encoding>
    	<scala.version>2.10.4</scala.version>
        <jets3t.version>0.9.3</jets3t.version>
        <!--scoverage.plugin.version>1.1.1</scoverage.plugin.version-->
	</properties>
	<distributionManagement>
		<snapshotRepository>
			<id>snapshots</id>
			<name>libs-snapshot</name>
			<url>http://artifactory.ops.snapdeal.io:8080/libs-snapshot-local</url>
		</snapshotRepository>
		<repository>
			<id>central</id>
			<name>libs-release</name>
			<url>http://artifactory.ops.snapdeal.io:8080/libs-release-local</url>
		</repository>


	</distributionManagement>
  <repositories>
    <repository>
      <id>maven-hadoop</id>
      <name>Hadoop Releases</name>
      <url>https://repository.cloudera.com/content/repositories/releases/</url>
    </repository>
    <repository>
      <id>cloudera-repos</id>
      <name>Cloudera Repos</name>
      <url>https://repository.cloudera.com/artifactory/cloudera-repos/</url>
    </repository>
	<repository>
      <id>Spray.cc repository</id>
      <url>http://repo.spray.cc</url>
    </repository>
    <repository>
      <id>Akka repository</id>
      <url>http://repo.akka.io/releases</url>
    </repository>
    <repository>
      <id>Typesafe Repo</id>
      <url>http://repo.typesafe.com/typesafe/releases/</url>
    </repository>
    <repository>
      <id>confluent</id>
      <url>http://packages.confluent.io/maven/</url>
    </repository>
    <repository>
      <id>job-server-bintray</id>
      <name>Job Server Bintray</name>
      <url>https://dl.bintray.com/spark-jobserver/maven/</url>
    </repository>
  </repositories>

  <dependencies>
      <dependency>
          <groupId>commons-dbcp</groupId>
          <artifactId>commons-dbcp</artifactId>
          <version>1.4</version>
      </dependency>
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-jdbc</artifactId>
          <version>5.2.0.RELEASE</version>
      </dependency>
      <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.version}</version>
    </dependency>

      <dependency>
          <groupId>mysql</groupId>
          <artifactId>mysql-connector-java</artifactId>
          <version>5.1.38</version>
      </dependency>

      <!-- http://mvnrepository.com/artifact/org.hibernate/hibernate-core -->
      <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-core</artifactId>
          <version>5.1.0.Final</version>
      </dependency>

      <dependency>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
          <version>4.11</version>
          <scope>test</scope>
      </dependency>

      <!-- http://mvnrepository.com/artifact/org.hibernate/hibernate-entitymanager -->
      <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-entitymanager</artifactId>
          <version>5.1.0.Final</version>
      </dependency>


<!--      &lt;!&ndash; https://mvnrepository.com/artifact/org.openjfx/javafx &ndash;&gt;-->
<!--      <dependency>-->
<!--          <groupId>org.openjfx</groupId>-->
<!--          <artifactId>javafx</artifactId>-->
<!--          <version>11</version>-->
<!--          <type>pom</type>-->
<!--      </dependency>-->

  </dependencies>

  <build>
    <finalName>spring-prac</finalName>
    <plugins>
<!--        <plugin>-->
<!--            <groupId>org.apache.maven.plugins</groupId>-->
<!--            <artifactId>maven-surefire-plugin</artifactId>-->
<!--            <version>2.20.1</version>-->
<!--        </plugin>-->
        <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <version>2.1.1</version>
            <configuration>
                <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
                <attachClasses>true</attachClasses>
            </configuration>
        </plugin>

        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
                <source>1.8</source>
                <target>1.8</target>
            </configuration>
        </plugin>
	<plugin>
	    <groupId>org.codehaus.mojo</groupId>
	    <artifactId>build-helper-maven-plugin</artifactId>
	    <executions>
	        <execution>
	            <phase>generate-sources</phase>
	            <goals><goal>add-source</goal></goals>
	            <configuration>
	                <sources>
	                    <source>src/main/scala</source>
	                </sources>
	            </configuration>
	        </execution>
	    </executions>
	</plugin>    
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>3.2.2</version>
          <!-- 
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
        <version>2.15.0</version>
         -->
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
            <configuration>
              <args>
                <!--arg>-make:transitive</arg-->
                <arg>-dependencyfile</arg>
                <arg>${project.build.directory}/.scala_dependencies</arg>
              </args>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
		<groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
		<configuration>
			<outputDirectory>${basedir}/target</outputDirectory>
		</configuration>
      </plugin>
      <plugin>
      	<groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <configuration>
			<filters>
        		<filter>
            		<artifact>*:*</artifact>
            		<excludes>
                		<exclude>META-INF/*.SF</exclude>
                		<exclude>META-INF/*.DSA</exclude>
                		<exclude>META-INF/*.RSA</exclude>
            		</excludes>
        		</filter>
    		</filters>        
        	<createDependencyReducedPom>false</createDependencyReducedPom>
            <keepDependenciesWithProvidedScope>true</keepDependenciesWithProvidedScope>
        </configuration>
        <executions>
        	<execution>
            	<phase>package</phase>
               	<goals>
                	<goal>shade</goal>
                </goals>
            </execution>
        </executions>
	  </plugin>
		<plugin>
		  <groupId>org.apache.maven.plugins</groupId>
		  <artifactId>maven-surefire-plugin</artifactId>
		  <version>2.7</version>
		  <configuration>
                    <printSummary>true</printSummary>
		  </configuration>
		</plugin>
		<plugin>
		  <groupId>org.scalatest</groupId>
		  <artifactId>scalatest-maven-plugin</artifactId>
		  <version>1.0</version>
		  <configuration>
		    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
		    <membersOnlySuites>
		    	com.snapdeal.dp.batch.sql.common,
		    	com.snapdeal.dp.batch.sql.timeunit,
		    	com.snapdeal.dp.batch.sql.types,
                com.snapdeal.dp.batch.sql.services.impl,
                com.snapdeal.dp.batch.sql.types.udf,
                com.snapdeal.dp.batch.sql.types.dag,
                com.snapdeal.dp.batch.sql.utils,
		    	org.apache.spark.sql.catalyst.analysis,
		    	org.apache.spark.sql.dp
		    </membersOnlySuites>		    
		    <jUnitClasses>
		    	com.snapdeal.dp.batch.sql.services.impl.DpLocalServiceTest,
                com.snapdeal.dp.batch.sql.types.JsonQueryConfigTest
            </jUnitClasses>
		    <junitxml>.</junitxml>
		    <filereports>testsuite.txt</filereports>
            <argLine>-Xmx512m -XX:MaxPermSize=1024m</argLine>
		  </configuration>
		  <executions>
		    <execution>
		      <id>test</id>
		      <goals>
		        <goal>test</goal>
		      </goals>
		    </execution>
		  </executions>
		</plugin>
		<!--plugin>
        	<groupId>org.scoverage</groupId>
			<artifactId>scoverage-maven-plugin</artifactId>
			<version>${scoverage.plugin.version}</version>
			<configuration>
				<highlighting>true</highlighting>
				<minimumCoverage>51</minimumCoverage>
				<failOnMinimumCoverage>true</failOnMinimumCoverage>
				<excludedPackages>
                    com.snapdeal.dp.batch.sql.services.PersistenceManager;com.snapdeal.dp.batch.sql.services.impl.NoOpDynamicViewService;com.snapdeal.dp.batch.sql.types.dag.DagNode;com.snapdeal.dp.batch.sql.types.dag.ExternalTable;com.snapdeal.dp.batch.sql.types.dag.EventTable;com.snapdeal.dp.batch.sql.types.dag.LeafNode;com.snapdeal.dp.batch.sql.types.dag.RegistrationPlan;com.snapdeal.dp.batch.sql.common.DpPlanUtils;com.snapdeal.dp.batch.sql.types.entity.*;org.apache.spark.sql.ConnectionCloser;com.snapdeal.dp.batch.sql.alluxioStore.entity.*;com.snapdeal.dp.batch.sql.common.TimeVariant;com.snapdeal.dp.batch.sql.alluxioStore.entity.enums.*;com.snapdeal.dp.batch.sql.common.mail;org.apache.spark.rdd.*;org.apache.spark.sql.execution.datasources.parquet.*;org.apache.parquet.hadoop.*;org.apache.spark.sql.execution.datasources.parquet.*;org.apache.spark.sql.hive.*;com.snapdeal.dp.batch.sdk.*;org.apache.spark.sql.SqcRefreshJobDef;com.snapdeal.dp.batch.sql.SDKDriverImpl;org.apache.spark.sql.DpContext*;org.apache.spark.sql.DpContext;org.apache.spark.sql.DpSqlContext
                </excludedPackages>
            </configuration>
			<executions>
				<execution>
					<goals>
						<goal>report</goal>
						<goal>check-only</goal>
					</goals>
					<phase>prepare-package</phase>
				</execution>
			</executions>
		</plugin -->
    </plugins>
      <testResources>
          <testResource>
              <directory>src/test/resources</directory>
          </testResource>
      </testResources>
  </build>
    <reporting>
        <plugins>
            <!--plugin>
                <groupId>org.scoverage</groupId>
                <artifactId>scoverage-maven-plugin</artifactId>
                <version>${scoverage.plugin.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report-only</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin-->
        </plugins>
    </reporting>    
</project>
